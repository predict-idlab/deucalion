apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.webhook.appName }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.webhook.appName }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.webhook.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.webhook.appName }}
    spec:
      containers:
      - name: {{ .Values.webhook.appName }}
        image: {{ .Values.webhook.image.name }}:{{ .Values.webhook.image.tag }}
        imagePullPolicy: {{ .Values.webhook.image.pullPolicy }}
        ports:
        - containerPort: 443
          name: tls
        args:
          - webhook
          - "--default-sidecar-image"
          - "{{ .Values.webhook.sidecar.image.name }}:{{ .Values.webhook.sidecar.image.tag }}"
          - "--service-account-name"
          - "{{ .Values.webhook.sidecar.serviceAccountName }}"
          - "--alert-manager-port"
          - "{{ .Values.alertManager.containerPort }}"
          - "--alert-manager-host"
          - "{{ .Values.alertManager.appName }}.{{ .Values.namespace }}.svc.cluster.local"
          - "--alert-manager-alert-name"
          - "{{ .Values.webhook.sidecar.alertName }}"
        volumeMounts:
          - name: webhook-tls-certs
            mountPath: /etc/webhook/certs
            readOnly: true
      volumes:
        - name: webhook-tls-certs
          secret:
            secretName: deucalion-injector-webhook-tls
